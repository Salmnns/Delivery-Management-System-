# -*- coding: utf-8 -*-
"""part 3

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iESBoWd3-FJtbc1bF9Zd16_VQmgzTf69
"""

from enum import Enum

# Define an Enum for Order Status
class OrderStatus(Enum):
    PROCESSING = "Processing"
    OUT_FOR_DELIVERY = "Out for Delivery"
    DELIVERED = "Delivered"

class Customer:
    """Represents a customer who places delivery orders and tracks them."""

    def __init__(self, customer_id, name, email, phone, address):
        self.__customer_id = customer_id
        self.__name = name
        self.__email = email
        self.__phone = phone
        self.__address = address

    # Getter Methods
    def getCustomerID(self):
        return self.__customer_id

    def getName(self):
        return self.__name

    def getEmail(self):
        return self.__email

    def getPhone(self):
        return self.__phone

    def getAddress(self):
        return self.__address

    # Setter Methods
    def setEmail(self, email):
        self.__email = email

    def setPhone(self, phone):
        self.__phone = phone

    def setAddress(self, address):
        self.__address = address

class DeliveryOrder:
    """Represents a delivery request placed by a customer."""

    def __init__(self, order_id, customer_id, recipient_name, recipient_address, package_weight, status, tracking_number):
        self.__order_id = order_id
        self.__customer_id = customer_id
        self.__recipient_name = recipient_name
        self.__recipient_address = recipient_address
        self.__package_weight = package_weight
        self.__status = status
        self.__tracking_number = tracking_number

    # Getter Methods
    def getOrderID(self):
        return self.__order_id

    def getCustomerID(self):
        return self.__customer_id

    def getRecipientName(self):
        return self.__recipient_name

    def getRecipientAddress(self):
        return self.__recipient_address

    def getPackageWeight(self):
        return self.__package_weight

    def getStatus(self):
        return self.__status

    def getTrackingNumber(self):
        return self.__tracking_number

    # Setter Methods
    def setStatus(self, status):
        if isinstance(status, OrderStatus):
            self.__status = status
        else:
            raise ValueError("Invalid order status")

class DeliveryStaff:
    """Represents delivery personnel responsible for handling packages."""

    def __init__(self, staff_id, name, phone):
        self.__staff_id = staff_id
        self.__name = name
        self.__phone = phone
        self.__assigned_orders = []

    # Getter Methods
    def getStaffID(self):
        return self.__staff_id

    def getName(self):
        return self.__name

    def getPhone(self):
        return self.__phone

    def getAssignedOrders(self):
        return self.__assigned_orders

class Admin:
    """Represents an admin responsible for managing orders and delivery staff."""

    def __init__(self, admin_id, name, email, role):
        self.__admin_id = admin_id
        self.__name = name
        self.__email = email
        self.__role = role

    # Getter Methods
    def getAdminID(self):
        return self.__admin_id

    def getName(self):
        return self.__name

    def getEmail(self):
        return self.__email

    def getRole(self):
        return self.__role